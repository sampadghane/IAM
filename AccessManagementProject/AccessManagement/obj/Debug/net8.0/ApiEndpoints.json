[
  {
    "ContainingType": "AccessManagement.Controllers.AuditController",
    "Method": "getAllLogs",
    "RelativePath": "api/Audit/api/getAllLogs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.AuditLog",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.AuditController",
    "Method": "getLogsOfUser",
    "RelativePath": "api/Audit/api/getlogsofuser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.AuditLog",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.ManagerController",
    "Method": "Deleteuser",
    "RelativePath": "api/Manager",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "ChangePassword",
    "RelativePath": "api/User/api/changepassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "ChangeUserPassword",
    "RelativePath": "api/User/api/changepassworduser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "checkotp",
    "RelativePath": "api/User/api/check-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "otp",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.UserEmail",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "createUser",
    "RelativePath": "api/User/api/createUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "Deleteuser",
    "RelativePath": "api/User/api/deleteuser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "getCurrentUser",
    "RelativePath": "api/User/api/getcurrentuser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "LoginUser",
    "RelativePath": "api/User/api/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "LogoutUser",
    "RelativePath": "api/User/api/logout",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "ResetPassword",
    "RelativePath": "api/User/api/resetpassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "newPassword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "SecQue",
    "RelativePath": "api/User/question",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AccessManagement.Models.UserEmail",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccessManagement.Controllers.UserController",
    "Method": "SendEmail",
    "RelativePath": "api/User/send-email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "question",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "answer",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccessManagement.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AccessManagement.WeatherForecast, AccessManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]